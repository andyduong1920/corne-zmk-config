/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    macros {
        file_change_vscode: file_change_vscode {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(LS(S)) &kp LC(LS(Z))>;
            label = "FILE_CHANGE_VSCODE";
        };
    };

    combos {
        compatible = "zmk,combos";

        // Utils

        bootloader {
            bindings = <&bootloader>;
            key-positions = <29 4>;
            layers = <1>;
            timeout-ms = <1000>;
            require-prior-idle-ms = <1000>;
            slow-release;
        };

        bluetooth_reset {
            bindings = <&bt BT_CLR>;
            key-positions = <29 25>;
            timeout-ms = <1000>;
            slow-release;
            require-prior-idle-ms = <1000>;
            layers = <1>;
        };

        // Layer switch

        to-layer-mouse {
            bindings = <&to 1>;
            key-positions = <36 26>;
            slow-release;
            layers = <0>;
            timeout-ms = <1000>;
        };

        // Key for alpha numeric layer

        tab {
            bindings = <&kp TAB>;
            key-positions = <36 2>;
            timeout-ms = <1000>;
            slow-release;
            layers = <0>;
        };

        capsLock {
            bindings = <&kp CLCK>;
            key-positions = <36 3>;
            timeout-ms = <1000>;
            slow-release;
            layers = <0>;
        };

        // Common

        show_all_app {
            bindings = <&kp LC(UP_ARROW)>;
            key-positions = <16 15>;
            layers = <1 0>;
        };

        show_all_windown {
            bindings = <&kp LC(DOWN_ARROW)>;
            key-positions = <14 15>;
            layers = <1 0>;
        };

        search-all-vs-code {
            bindings = <&kp LG(LS(F))>;
            key-positions = <16 28>;
            layers = <1 0>;
        };

        quit_app {
            bindings = <&kp LG(Q)>;
            key-positions = <1 37>;
            timeout-ms = <1000>;
            slow-release;
            layers = <0 1>;
        };

        close_window {
            bindings = <&andy_press_hold_or_tap LG(LS(W)) LG(W)>;
            key-positions = <37 2>;
            timeout-ms = <1000>;
            slow-release;
            layers = <0 1>;
        };

        refresh {
            bindings = <&andy_press_hold_or_tap LA(NUMBER_6) LG(R)>;
            key-positions = <37 4>;
            timeout-ms = <1000>;
            slow-release;
            layers = <0 1>;
        };

        select_all {
            bindings = <&kp LG(A)>;
            key-positions = <37 13>;
            timeout-ms = <1000>;
            slow-release;
            layers = <0 1>;
        };

        save {
            bindings = <&kp LG(S)>;
            key-positions = <37 14>;
            timeout-ms = <1000>;
            slow-release;
            layers = <0 1>;
        };

        undo {
            bindings = <&kp LG(Z)>;
            key-positions = <37 25>;
            timeout-ms = <1000>;
            slow-release;
            layers = <0 1>;
        };

        lock {
            bindings = <&kp LG(L)>;
            key-positions = <37 38>;
            timeout-ms = <1000>;
            slow-release;
            layers = <0 1>;
        };

        esc {
            bindings = <&kp ESC>;
            key-positions = <36 1>;
            timeout-ms = <1000>;
            slow-release;
            layers = <0 1>;
        };

        search {
            bindings = <&kp LG(F)>;
            key-positions = <37 16>;
            timeout-ms = <1000>;
            slow-release;
            layers = <0 1>;
        };

        copy {
            bindings = <&andy_press_hold_or_tap LG(LS(C)) LG(C)>;
            key-positions = <37 27>;
            timeout-ms = <1000>;
            slow-release;
            layers = <0 1>;
        };

        paste {
            bindings = <&andy_press_hold_or_tap LA(N5) LG(V)>;
            key-positions = <37 28>;
            timeout-ms = <1000>;
            slow-release;
            layers = <0 1>;
        };

        home {
            bindings = <&andy_press_hold_or_tap HOME UP_ARROW>;
            key-positions = <37 5>;
            timeout-ms = <1000>;
            slow-release;
            layers = <0 1>;
        };

        end {
            bindings = <&andy_press_hold_or_tap END DOWN_ARROW>;
            key-positions = <37 17>;
            timeout-ms = <1000>;
            slow-release;
            layers = <0 1>;
        };

        back_and_forward {
            bindings = <&andy_press_hold_or_tap LG(RIGHT_BRACKET) LG(LEFT_BRACKET)>;
            key-positions = <37 29>;
            timeout-ms = <1000>;
            slow-release;
            layers = <0 1>;
        };

        slack {
            bindings = <&kp LA(NUMBER_4)>;
            key-positions = <36 14>;
            timeout-ms = <1000>;
            slow-release;
            layers = <0 1>;
        };

        vscode {
            bindings = <&kp LA(NUMBER_1)>;
            key-positions = <36 28>;
            timeout-ms = <1000>;
            slow-release;
            layers = <0 1>;
        };

        to_base_layout {
            bindings = <&to 0>;
            key-positions = <36 25>;
            timeout-ms = <1000>;
            slow-release;
            layers = <1 2>;
        };
    };

    behaviors {
        andy_press_hold_or_tap: andy_press_hold_or_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "ANDY_PRESS_HOLD_OR_TAP";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <350>;
        };
    };

    behaviors {
        andy_press_tap_or_hold_layer: andy_press_tap_or_hold_layer {
            compatible = "zmk,behavior-hold-tap";
            label = "ANDY_PRESS_TAP_OR_HOLD_LAYER";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <350>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            bindings = <
&none  &kp Q                                 &kp W                                   &kp E                               &kp R                               &kp T        &kp Y    &kp U                                            &kp I                               &kp O                                   &kp P                                    &none
&none  &andy_press_hold_or_tap LEFT_SHIFT A  &andy_press_hold_or_tap LEFT_CONTROL S  &andy_press_hold_or_tap LEFT_ALT D  &andy_press_hold_or_tap LEFT_GUI F  &kp G        &kp H    &andy_press_hold_or_tap LEFT_GUI J               &andy_press_hold_or_tap LEFT_ALT K  &andy_press_hold_or_tap LEFT_CONTROL L  &andy_press_hold_or_tap LEFT_SHIFT SEMI  &none
&none  &kp Z                                 &kp X                                   &kp C                               &kp V                               &kp B        &kp N    &kp M                                            &kp COMMA                           &kp DOT                                 &kp FSLH                                 &none
                                                                                     &none                               &none                               &kp SPACE    &kp RET  &andy_press_hold_or_tap LG(BACKSPACE) BACKSPACE  &none
            >;
        };

        mouse {
            bindings = <
&none  &none           &none             &none                                       &andy_press_hold_or_tap LA(NUMBER_6) LG(R)  &andy_press_hold_or_tap HOME UP_ARROW                         &none  &none  &none  &none  &none  &none
&none  &kp LEFT_SHIFT  &kp LEFT_CONTROL  &andy_press_hold_or_tap LEFT_ALT PAGE_DOWN  &andy_press_hold_or_tap LEFT_GUI LG(F)      &andy_press_hold_or_tap END DOWN_ARROW                        &none  &none  &none  &none  &none  &none
&none  &kp LG(Z)       &kp LC(F)         &andy_press_hold_or_tap LG(LS(C)) LG(C)     &andy_press_hold_or_tap LA(N5) LG(V)        &andy_press_hold_or_tap LG(RIGHT_BRACKET) LG(LEFT_BRACKET)    &none  &none  &none  &none  &none  &none
                                         &mkp RCLK                                   &none                                       &mkp LCLK                                                     &none  &none  &none
            >;

            label = "mouse";
        };

        mouse-2 {
            bindings = <
&none  &none           &kp W             &kp E                                            &kp R             &kp LG(T)        &none  &none  &none  &none  &none  &none
&none  &kp LEFT_ARROW  &kp LA(NUMBER_4)  &mt LA(NUMBER_3) LA(NUMBER_2)                    &none             &none            &none  &none  &none  &none  &none  &none
&none  &to 0           &none             &none                                            &kp LA(NUMBER_1)  &kp LG(SLASH)    &none  &none  &none  &none  &none  &none
                                         &andy_press_hold_or_tap LG(BACKSPACE) BACKSPACE  &none             &kp ENTER        &none  &none  &none
            >;

            label = "mouse-2";
        };
    };
};
