/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    macros {
        open_vs_recent_code: open_vs_recent_code {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(SPACE) &kp BACKSPACE &kp BACKSPACE &kp S &kp E &kp A &kp R &kp C &kp H &kp SPACE &kp V &kp S &kp ENTER>;
            label = "OPEN_VS_RECENT_CODE";
        };

        file_change_vscode: file_change_vscode {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(LS(S)) &kp LC(LS(Z))>;
            label = "FILE_CHANGE_VSCODE";
        };

        clipboard_history: clipboard_history {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(SPACE) &kp BACKSPACE &kp BACKSPACE &kp C &kp L &kp I &kp P &kp B &kp ENTER>;
            label = "CLIPBOARD_HISTORY";
        };
    };

    combos {
        compatible = "zmk,combos";

        to-layer-mouse {
            bindings = <&to 4>;
            key-positions = <1 2>;
            slow-release;
            layers = <0>;
            timeout-ms = <1000>;
        };

        bootloader {
            bindings = <&bootloader>;
            key-positions = <29 4>;
            layers = <0>;
            timeout-ms = <1000>;
            require-prior-idle-ms = <1000>;
            slow-release;
        };
    };

    behaviors {
        esc_or_lock: esc_or_lock {
            compatible = "zmk,behavior-hold-tap";
            label = "ESC_OR_LOCK";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <350>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&none  &kp Q  &kp W  &kp E         &kp R     &kp T        &kp Y    &kp U          &kp I      &kp O    &kp P     &none
&none  &kp A  &kp S  &kp D         &kp F     &kp G        &kp H    &kp J          &kp K      &kp L    &kp SEMI  &none
&none  &kp Z  &kp X  &kp C         &kp V     &kp B        &kp N    &kp M          &kp COMMA  &kp DOT  &kp FSLH  &none
                     &kp LEFT_ALT  &kp LGUI  &kp SPACE    &kp RET  &kp BACKSPACE  &to 1
            >;
        };

        symbols {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&none  &kp N7        &kp N8        &kp KP_NUMBER_9  &mt RIGHT_BRACKET LEFT_BRACKET          &kp DOUBLE_QUOTES    &kp C_VOLUME_UP  &kp F2     &trans        &trans          &trans                &none
&none  &kp NUMBER_4  &kp N5        &kp NUMBER_6     &mt RIGHT_PARENTHESIS LEFT_PARENTHESIS  &kp SINGLE_QUOTE     &kp C_VOL_DN     &kp F1     &kp UNDER     &kp MINUS       &kp EQUAL             &none
&none  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3     &mt RIGHT_BRACE LEFT_BRACE              &mt COMMA DOT        &kp LEFT         &kp RIGHT  &kp UP_ARROW  &kp DOWN_ARROW  &open_vs_recent_code  &none
                                   &trans           &trans                                  &trans               &trans           &trans     &to 0
            >;
        };

        utils {
            bindings = <
&none  &mkp LCLK       &mmv MOVE_UP    &mkp RCLK        &msc SCRL_DOWN  &none    &none           &kp UP_ARROW    &none            &none  &none  &to 0
&none  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &msc SCRL_UP    &none    &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &none  &none  &none
&none  &kp PAGE_DOWN   &kp PAGE_UP     &kp HOME         &kp END         &none    &none           &none           &none            &none  &none  &none
                                       &none            &none           &none    &none           &none           &mo 3
            >;
        };

        misc {
            bindings = <
&trans  &bt BT_CLR_ALL  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &bootloader     &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans          &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &to 4
                                &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        mouse {
            bindings = <
&none  &esc_or_lock LG(L) ESCAPE      &kp LG(W)                        &kp HOME                         &kp LG(R)                    &kp UP_ARROW                         &none  &none  &none  &none  &none  &none
&none  &esc_or_lock LEFT_SHIFT LG(A)  &esc_or_lock LEFT_CONTROL LG(S)  &esc_or_lock LEFT_ALT PAGE_DOWN  &esc_or_lock LEFT_GUI LG(F)  &esc_or_lock LG(LS(F)) DOWN_ARROW    &none  &none  &none  &none  &none  &none
&none  &kp LG(Z)                      &kp LSHFT                        &kp LG(C)                        &kp LG(V)                    &kp LG(LEFT_BRACKET)                 &none  &none  &none  &none  &none  &none
                                                                       &mkp RCLK                        &mo 5                        &mkp LCLK                            &none  &none  &none
            >;

            label = "^_~";
        };

        mouse-2 {
            bindings = <
&none  &kp LG(Q)       &kp LC(W)     &none                          &open_vs_recent_code           &none                        &none  &none  &none  &none  &none  &none
&none  &mmv MOVE_DOWN  &mmv MOVE_UP  &mt LA(NUMBER_3) LA(NUMBER_2)  &mt LA(NUMBER_1) LA(NUMBER_4)  &mt LC(DOWN) LC(UP_ARROW)    &none  &none  &none  &none  &none  &none
&none  &to 0           &none         &clipboard_history             &kp LG(LS(C))                  &kp LG(RIGHT_BRACKET)        &none  &none  &none  &none  &none  &none
                                     &kp BACKSPACE                  &none                          &kp ENTER                    &none  &none  &none
            >;

            label = "^_^";
        };
    };
};
