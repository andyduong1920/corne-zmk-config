/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    macros {
        file_change_vscode: file_change_vscode {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(LS(S)) &kp LC(LS(Z))>;
            label = "FILE_CHANGE_VSCODE";
        };
    };

    combos {
        compatible = "zmk,combos";

        to-layer-mouse {
            bindings = <&to 4>;
            key-positions = <1 2>;
            slow-release;
            layers = <0>;
            timeout-ms = <1000>;
        };

        bootloader {
            bindings = <&bootloader>;
            key-positions = <29 4>;
            layers = <0>;
            timeout-ms = <1000>;
            require-prior-idle-ms = <1000>;
            slow-release;
        };

        show_all_app {
            bindings = <&kp LC(UP_ARROW)>;
            key-positions = <16 15>;
            layers = <4>;
        };

        show_all_windown {
            bindings = <&kp LC(DOWN_ARROW)>;
            key-positions = <14 15>;
            layers = <4>;
        };

        search-all-vs-code {
            bindings = <&kp LG(LS(F))>;
            key-positions = <16 28>;
            layers = <4>;
        };

        bluetooth_reset {
            bindings = <&bt BT_CLR>;
            key-positions = <29 25>;
            timeout-ms = <1000>;
            slow-release;
            require-prior-idle-ms = <1000>;
            layers = <0>;
        };
    };

    behaviors {
        andy_hold_or_tap: andy_hold_or_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "ANDY_HOLD_OR_TAP";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <350>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            bindings = <
&none  &kp Q                           &kp W                             &kp E                         &kp R                         &kp T        &kp Y    &kp U                         &kp I                         &kp O                             &kp P                              &none
&none  &andy_hold_or_tap LEFT_SHIFT A  &andy_hold_or_tap LEFT_CONTROL S  &andy_hold_or_tap LEFT_ALT D  &andy_hold_or_tap LEFT_GUI F  &kp G        &kp H    &andy_hold_or_tap LEFT_GUI J  &andy_hold_or_tap LEFT_ALT K  &andy_hold_or_tap LEFT_CONTROL L  &andy_hold_or_tap LEFT_SHIFT SEMI  &none
&none  &kp Z                           &kp X                             &kp C                         &kp V                         &kp B        &kp N    &kp M                         &kp COMMA                     &kp DOT                           &kp FSLH                           &none
                                                                         &kp LEFT_ALT                  &kp LGUI                      &kp SPACE    &kp RET  &kp BACKSPACE                 &to 1
            >;
        };

        symbols {
            bindings = <
&none  &kp N7        &kp N8        &kp KP_NUMBER_9  &mt RIGHT_BRACKET LEFT_BRACKET          &kp DOUBLE_QUOTES    &kp C_VOLUME_UP  &kp F2     &trans        &trans          &trans     &none
&none  &kp NUMBER_4  &kp N5        &kp NUMBER_6     &mt RIGHT_PARENTHESIS LEFT_PARENTHESIS  &kp SINGLE_QUOTE     &kp C_VOL_DN     &kp F1     &kp UNDER     &kp MINUS       &kp EQUAL  &none
&none  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3     &mt RIGHT_BRACE LEFT_BRACE              &mt COMMA DOT        &kp LEFT         &kp RIGHT  &kp UP_ARROW  &kp DOWN_ARROW  &none      &none
                                   &trans           &trans                                  &trans               &trans           &trans     &to 0
            >;
        };

        utils {
            bindings = <
&none  &mkp LCLK       &mmv MOVE_UP    &mkp RCLK        &msc SCRL_DOWN  &none    &none           &kp UP_ARROW    &none            &none  &none  &to 0
&none  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &msc SCRL_UP    &none    &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &none  &none  &none
&none  &kp PAGE_DOWN   &kp PAGE_UP     &kp HOME         &kp END         &none    &none           &none           &none            &none  &none  &none
                                       &none            &none           &none    &none           &none           &mo 3
            >;
        };

        misc {
            bindings = <
&trans  &bt BT_CLR_ALL  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &bootloader     &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans          &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &to 4
                                &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        mouse {
            bindings = <
&none  &andy_hold_or_tap LG(L) ESCAPE      &andy_hold_or_tap LG(LS(W)) LG(W)     &kp TAB                               &andy_hold_or_tap LA(NUMBER_6) LG(R)  &andy_hold_or_tap HOME UP_ARROW                         &none  &none  &none  &none  &none  &none
&none  &andy_hold_or_tap LEFT_SHIFT LG(A)  &andy_hold_or_tap LEFT_CONTROL LG(S)  &andy_hold_or_tap LEFT_ALT PAGE_DOWN  &andy_hold_or_tap LEFT_GUI LG(F)      &andy_hold_or_tap END DOWN_ARROW                        &none  &none  &none  &none  &none  &none
&none  &kp LG(Z)                           &kp LC(F)                             &andy_hold_or_tap LG(LS(C)) LG(C)     &andy_hold_or_tap LA(N5) LG(V)        &andy_hold_or_tap LG(RIGHT_BRACKET) LG(LEFT_BRACKET)    &none  &none  &none  &none  &none  &none
                                                                                 &mkp RCLK                             &mo 5                                 &mkp LCLK                                               &none  &none  &none
            >;

            label = "^_~";
        };

        mouse-2 {
            bindings = <
&none  &kp LG(Q)       &kp W             &kp E                                      &kp R             &kp LG(T)        &none  &none  &none  &none  &none  &none
&none  &kp LEFT_ARROW  &kp LA(NUMBER_4)  &mt LA(NUMBER_3) LA(NUMBER_2)              &none             &none            &none  &none  &none  &none  &none  &none
&none  &to 0           &none             &none                                      &kp LA(NUMBER_1)  &kp LG(SLASH)    &none  &none  &none  &none  &none  &none
                                         &andy_hold_or_tap LG(BACKSPACE) BACKSPACE  &none             &kp ENTER        &none  &none  &none
            >;

            label = "^_^";
        };
    };
};
